<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sample.dao.UserDao">

	<resultMap id="UserResultMap"  type="com.sample.vo.User">
		<id 	column="user_no" 			property="no"/>
		<result column="user_id" 			property="id"/>
		<result column="user_password" 		property="password"/>
		<result column="user_name" 			property="name"/>
		<result column="user_email" 		property="email"/>
		<result column="user_point" 		property="point"/>
		<result column="user_disabled" 		property="disabled"/>
		<result column="user_updated_date" 	property="updatedDate"/>
		<result column="user_created_date" 	property="createdDate"/>
	</resultMap>
	
	<select id="getUser" parameterType="map" resultMap="UserResultMap">
		select
			*
		from
			sample_spring_book_users
		<choose>
			<when test="no != null">		<!-- map객체에서 no라는 이름으로 값을 찾았는데 값이 존재하는 경우를 말한다. -->
				where user_no = #{no}
			</when>
			<when test="id != null">
				where user_id = #{id}
			</when>
			<when test="email != null">
				where user_email = #{email}
			</when>
		</choose>
	</select>
	
	<select id="getUserByNo" parameterType="int" resultMap="UserResultMap">
		select
			*
		from
			sample_spring_book_users
		where
			user_no = #{value}
	</select>
	
	<select id="getUserById" parameterType="string" resultMap="UserResultMap">
		select
			*
		from
			sample_spring_book_users
		where
			user_id = #{value}
	</select>
	
	<select id="getUserByEmail" parameterType="string" resultMap="UserResultMap">
		select
			*
		from
			sample_spring_book_users
		where
			user_email = #{value}
	</select>
	
	<update id="updateUser" parameterType="com.sample.vo.User">
		update 
			sample_spring_book_users
		set
			user_password = #{password},
			user_point = #{point},
			user_disabled = #{disabled},
			user_updated_date = sysdate
		where
			user_no = #{no}
	</update>
	
</mapper>